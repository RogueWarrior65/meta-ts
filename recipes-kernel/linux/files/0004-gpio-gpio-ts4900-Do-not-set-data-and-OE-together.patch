From d36c06cdde09a0bfa0377769d5a0d3226e97c30f Mon Sep 17 00:00:00 2001
From: Mark Featherston <mark@embeddedarm.com>
Date: Tue, 21 Aug 2018 10:20:56 -0700
Subject: [PATCH 04/10] gpio: gpio-ts4900: Do not set data and OE together

This works around an issue with the hardware where both OE and
DATA are exposed in the same register. If both are updated
simultaneously, the harware makes no guarantees that OE or DATA
will actually change in any given order.

For example, a pin starting as a pulled high input with the output
bit defaulting to 0. If set directly to a high output, the OE bit
might arrive first, set the pin high for 2-3 ns before the DATA
bit is transitioned high. To fix this any direction chagnes should
apply the data bit first, then the OE.

commit 7516bc02c810c878072c35d9921b7f74a2b1e7af in
https://github.com/embeddedarm/linux-tsimx/
---
 drivers/gpio/gpio-ts4900.c | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

diff --git a/drivers/gpio/gpio-ts4900.c b/drivers/gpio/gpio-ts4900.c
index d885032cf814..90b97cc87d57 100644
--- a/drivers/gpio/gpio-ts4900.c
+++ b/drivers/gpio/gpio-ts4900.c
@@ -55,19 +55,33 @@ static int ts4900_gpio_direction_input(struct gpio_chip *chip,
 {
 	struct ts4900_gpio_priv *priv = gpiochip_get_data(chip);
 
-	/*
-	 * This will clear the output enable bit, the other bits are
-	 * dontcare when this is cleared
+	/* Only clear the OE bit here, requires a RMW. Prevents potential issue
+	 * with OE and data getting to the physical pin at different times.
 	 */
-	return regmap_write(priv->regmap, offset, 0);
+	return regmap_update_bits(priv->regmap, offset, TS4900_GPIO_OE, 0);
 }
 
 static int ts4900_gpio_direction_output(struct gpio_chip *chip,
 					unsigned int offset, int value)
 {
 	struct ts4900_gpio_priv *priv = gpiochip_get_data(chip);
+	unsigned int reg;
 	int ret;
 
+	/* If changing from an input to an output, we need to first set the
+	 * proper data bit to what is requested and then set OE bit. This
+	 * prevents a glitch that can occur on the IO line
+	 */
+	regmap_read(priv->regmap, offset, &reg);
+	if(!(reg & TS4900_GPIO_OE)) {
+		if(value)
+			reg = TS4900_GPIO_OUT;
+		else
+			reg &= ~TS4900_GPIO_OUT;
+
+		regmap_write(priv->regmap, offset, reg);
+	}
+
 	if (value)
 		ret = regmap_write(priv->regmap, offset, TS4900_GPIO_OE |
 							 TS4900_GPIO_OUT);
-- 
2.11.0

